sum(is.na(data$Ozone))
bad <- is.na(data$Ozone)
ozone <- data$Ozone[!bad]
length(ozone)
mean(ozone)
View(data)
test2 <- data[,1:2]
test3<-(test2$Ozone >31 & test2$Solar.R >90)
test2[!test3]
test2[,!test3]
test2[!test3]
test3
test2[test2$Ozone >31 & test2$Solar.R >90]
test2[,test2$Ozone >31 & test2$Solar.R >90]
test2[test2$Ozone >31 & test2$Solar.R >90,]
test3 <- test2[test2$Ozone >31 & test2$Solar.R >90,]
mean(test3)
mean(test3$Solar.R)
bad2 <- is.na(test3$Solar.R)
test3solar <- (test3$Solar.R[!bad]
test3solar <- test3$Solar.R[!bad]
test3solar <- test3$Solar.R[!bad]
bad2 <- is.na(test3$Solar.R)
test3solar <- test3$Solar.R[!bad2]
mean(test3solar)
test2 <- data[,1:2]
test2 <- test2[test2$Ozone >31 & test2$Solar.R >90,]
bad2 <- is.na(test3$Solar.R)
bad2 <- is.na(test2,)
bad2 <- is.na(test2)
test2 <- test2[!bad2]
test2 <- data[,1:2]
test2 <- test2[test2$Ozone >31 & test2$Solar.R >90,]
bad2 <- is.na(test2)
test3 <- test2[!bad2]
bad2 <- is.na(test2)
test3 <- test2$Solar.R[!bad2]
mean(test3)
test3 <- test2$Solar.R[!bad2]
bad2 <- is.na(test2$Solar.R)
test3 <- test2$Solar.R[!bad2]
mean(test3)
sum(is.na(test3))
another1 <- data[,data$Month==6]
another1 <- data[data$Month==6]
another1 <- data$Month == 6
test <- data[another1]
View(data)
test <- data[,5 == another1]
test <- data[,5 == 6]
View(data)
data$Month == 6
good <-data$Month == 6
data$Month[good]
data <- data$Month[good]
data <- read.csv("hw1_data.csv")
mean(data$Temp)
datamax <- subset(data,!is.na(Ozone) & data$Month == 5, select= Ozone)
apply(datamax,2,max)
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
skip()
nxt()
x
y <- x-3
0
main()
y
main()
c(.5,55,-10,6)
x<- c(.5,55,-10,6)
skip()
tf <- num_vect < 1
tf
num_vec >= 6
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name <- c(my_char,"Simone")
my_name
paste(my_name, collape = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X","Y","Z"), sep= "")
paste(LETTERS, 1:4, sep= "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11,bar=2,norf = NA)
vect
name(vect)
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
indentical(vect,vect2)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vecotr)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- (1:20,4,5)
my_matrix2 <- (1:20 , 4, 5)
my_matrix2 <- (my_vector , 4, 5)
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
c("patient","age","weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
?
bye()
bye()
?elseif
?ifelse
search()
bye()
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 = 7
5 == 7
5 !== 7
5 != 7
info()
skip()
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 >8 || 6 !=8 && 4 >3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 ==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(int > 7)
which(ints > 7)
any(ints < 0)
all(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num - 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
evaluate(sum, c(2, 4, 6))
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x))
evaluate(function(x){x+1},6)
evaluate(function(x){whihc}
evaluate(function(x)[1],c(8,4,10))
evaluate(function(x)[1],c(8,4,10))
evaluate(function(x){[1]},c(8,4,10))
evaluate(function(x){1},c(8,4,10))
evaluate(function(x){x[1]},c(8,4,10))
skip()
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[3]},c(8, 4 ,0))
skip()
?paste
paste("Programming","is","fun!")
submit()
telegram("I'm a hoe")
skip()
mad_libs()
skip()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass()
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3 < "October
| 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
fifftime(Sys.time(), t1, units = 'days')
difftime(Sys.time(), t1, units = 'days')
rm(list=ls())
directory <- setwd("/Users/simonevantaylor/Documents/Coursera/specdata")
library(data.table)
?paste0
filnames <- paste(directory,"_")
filenames <- paste(directory,"_")
filenames
filenames <- paste(directory,"_",".csv")
filenames
filenames <- dir(directory, pattern = '*.csv', full.names = FALSE, recursive= TRUE)
filenames
directory <- setwd("/Users/simonevantaylor/Documents/Coursera/specdata")
filenames <- dir(directory, pattern = '*.csv', full.names = FALSE, recursive= TRUE)
filenames
?lapply
?fread
pollutantmean <- function(directory,pollutant,id = 1:332){
print(filenames)
temp <- read.csv(filenames, stringsAsFactors = FALSE)
temp
}
pollutantmean <- function(directory,pollutant,id = 1:332){
print(filenames)
temp <- read.csv(filenames, stringsAsFactors = FALSE)
return(temp)
}
pollutantmean(filenames)
pollutantmean <- function(directory,pollutant,id = 1:332){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
values <-  numeric()
for (i in id){
data <- read.csv(filenames[i])
values <- c(values,data[[pollutant]])
}
mean(values,na.rm = TRUE)
}
pollutantmean(directory,"sulfate",id = 1:10)
pollutantmean <- function(directory,pollutant,id = 1:332){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
values <-  numeric()
for (i in id){
data <- read.csv(filenames[i])
values <- c(values,data[[pollutant]])
}
part1 <- mean(values,na.rm = TRUE)
return(part1)
}
pollutantmean(directory,"sulfate",id = 1:10)
part1 <- pollutantmean(directory,"sulfate",id = 1:10)
pollutantmean <- function(directory,pollutant,id = 1:332){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
values <-  numeric()
for (i in id){
data <- read.csv(filenames[i])
values <- c(values,data[[pollutant]])
}
#part1 <- mean(values,na.rm = TRUE)
return(values)
}
part1 <- pollutantmean(directory,"sulfate",id = 1:10)
head(part1)
pollutantmean <- function(directory,pollutant,id = 1:332){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
values <-  numeric()
for (i in id){
data <- read.csv(filenames[i])
values <- c(values,data[[pollutant]])
}
mean(values,na.rm = TRUE)
}
part1 <- pollutantmean(directory,"sulfate",id = 1:10)
check2 <- pollutantmean(directory,"nitrate",id = 70:72)
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
filenames
filenames <-tools::file_path_sans_ext(basename(fname))
filenames <-tools::file_path_sans_ext(basename(filenames))
filenames
data <- read.csv(filenames)
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
data <- read.csv(filenames)
complete <- function(directory, id= 1:332){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
print(filenames)
for (i in id) {
data <-read.csv(filenames[i])
}
filenames <-tools::file_path_sans_ext(basename(filenames))
}
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
print(filenames)
for (i in id) {
data <-read.csv(filenames[i])
}
for (i in 2) {
data <-read.csv(filenames[i])
for (i in 2) {
data <-read.csv(filenames[i])
}
complete <- function(directory, id= 1:332){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
print(filenames)
for (i in 2) {
data <-read.csv(filenames[i])
}
filenames <-tools::file_path_sans_ext(basename(filenames))
}
complete <- function(directory, id= 1:332){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
print(filenames)
for (i in 2) {
data <-read.csv(filenames[i])
}
filenames <-tools::file_path_sans_ext(basename(filenames))
}
filenames
esc
rm(list=ls())
library(data.table)
directory <- setwd("/Users/simonevantaylor/Documents/Coursera/specdata")
clear
rm(list=ls())
library(data.table)
directory <- setwd("/Users/simonevantaylor/Documents/Coursera/specdata")
pollutantmean <- function(directory,pollutant,id = 1:332){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
values <-  numeric()
for (i in id){
data <- read.csv(filenames[i])
values <- c(values,data[[pollutant]])
}
mean(values,na.rm = TRUE)
}
check1 <- pollutantmean(directory,"sulfate",id = 1:10)
check2 <- pollutantmean(directory,"nitrate",id = 70:72)
data <-read.csv(filenames[1])
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
print(filenames)
data <-read.csv(filenames[1])
data <-read.csv(filenames[10])
data <-read.csv(filenames[1:10])
data <-read.csv(filenames[1,3])
data <-read.csv(filenames[1:10])
data <-read.csv(filenames[1])
complete.cases(data)
sum(complete.cases(data))
filenames <-tools::file_path_sans_ext(basename(filenames))
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
idnum <-tools::file_path_sans_ext(basename(filenames))
complete <- function(directory, id= length(filenames)){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
print(filenames)
nobs <- numeric()
for (i in id) {
data <-read.csv(filenames[1])
nobs <- c(nobs,sum(complete.cases(data)))
}
idnum <-tools::file_path_sans_ext(basename(filenames))
data.frame(idnum,nobs)
}
complete(directory,1)
complete <- function(directory, id= length(filenames)){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
print(filenames)
nobs <- numeric()
for (i in id) {
data <-read.csv(filenames[1])
nobs <- c(nobs,sum(complete.cases(data)))
}
data.frame(id,nobs)
}
complete(directory,1)
complete(directory,30:25)
complete <- function(directory, id= length(filenames)){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
nobs <- numeric()
for (i in id) {
data <-read.csv(filenames[i])
nobs <- c(nobs,sum(complete.cases(data)))
}
data.frame(id,nobs)
}
complete(directory,30:25)
head(complete(directory))
complete(directory)
complete <- function(directory, id= 1: length(filenames)){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
nobs <- numeric()
for (i in id) {
data <-read.csv(filenames[i])
nobs <- c(nobs,sum(complete.cases(data)))
}
data.frame(id,nobs)
}
complete(directory)
idnum <-tools::file_path_sans_ext(basename(filenames))
idnum
complete(directory)
?cor
complete <- function(directory, id= 1: length(filenames)){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
nobs <- numeric()
for (i in id) {
data <-read.csv(filenames[i])
nobs <- c(nobs,sum(complete.cases(data)))
}
completedata <- data.frame(id,nobs)
}
complete(directory)
complete <- function(directory, id= 1: length(filenames)){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
nobs <- numeric()
for (i in id) {
data <-read.csv(filenames[i])
nobs <- c(nobs,sum(complete.cases(data)))
}
data.frame(id,nobs)
}
completedata <-complete(directory)
completedata
data
completedata <- rename(completedata, ID = id)
library(tidyverse)
completedata <-complete(directory)
completedata <- rename(completedata, ID = id)
head(completedata)
corr <- function(directory,threshold = 0){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)?
corrvec <- numeric()
for (i: length(filenames)) {
temp <- read_csv(filenames[i])
temp %<>%
left_join(completedata,temp, by "ID")
temp
}
}
corr <- function(directory,threshold = 0){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
corrvec <- numeric()
for (i in length(filenames)){
temp <- read_csv(filenames[i])
temp %<>%
left_join(completedata,temp, by = "ID")
temp
}
}
totaldata <- corr(directory)
library(magrittr)
totaldata <- corr(directory)
corr <- function(directory,threshold = 0){
filenames <- list.files(path=directory,pattern = "*.csv",full.names = TRUE)
corrvec <- numeric()
